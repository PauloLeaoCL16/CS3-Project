import java.util.*;
import static java.lang.System.*;

class PlayerHand
{
  private int totalChips;
  private TreeMap<String, Integer> chips;
  private int numBlack = 0;
  private int numBlue = 0;
  private int numRed = 0;
  private int numGreen = 0;
  private int numWhite = 0;
  private int points = 0;

  public PlayerHand()
  {
    totalChips = 0;
    chips = new TreeMap<String, Integer>();
    chips.put("black", 0);
    chips.put("blue", 0);
    chips.put("red", 0);
    chips.put("green", 0);
    chips.put("white", 0);
    chips.put("yellow", 0);
  }

  public int getTotalChips()
  {
    return totalChips;
  }
  
  public void addCard(String color)
  {
	  if(color.equals("red"))
		  numRed++;
	  else if(color.equals("black"))
		  numBlack++;
	  else if(color.equals("blue"))
		  numBlue++;
	  else if(color.equals("green"))
		  numGreen++;
	  else if(color.equals("white"))
		  numWhite++;
  }
  
  public int getNumCard(String color)
  {
	  if(color.equals("red"))
		  return numRed;
	  else if(color.equals("black"))
		  return numBlack;
	  else if(color.equals("blue"))
		  return numBlue;
	  else if(color.equals("green"))
		  return numGreen;
	  else if(color.equals("white"))
		  return numWhite;
	  return -1;
  }
  
  public void addChip(String color)
  {
	  chips.put(color, chips.get(color) + 1);
  }
  
  public int getChip(String color)
  {
	  return chips.get(color);
  }
  public TreeMap<String, Integer> getChipsMap()
  {
	  return chips;
  }
  public int getPoints()
  {
	  return points;
  }
  public void buyCard(Card card)
  {
	  if(card.getCost().containsKey("black"))
	  {
		  if((chips.get("black") + numBlack)- card.getCost().get("black") < 0)
		  {
			  chips.put("black", 0);
			  chips.put("wild", card.getCost().get("black") - chips.get("black"));
		  }
		  else
			  chips.put("black", chips.get("black") - (card.getCost().get("black") - numBlack));
	  }
	  if(card.getCost().containsKey("blue"))
	  {
		  if((chips.get("blue") + numBlue) - card.getCost().get("blue") < 0)
		  {
			  chips.put("blue", 0);
			  chips.put("wild", card.getCost().get("blue") - chips.get("blue"));
		  }
		  else
			  chips.put("blue", chips.get("blue") - (card.getCost().get("blue") - numBlue));
	  }
	  if(card.getCost().containsKey("red"))
	  {
		  if((chips.get("red") + numRed) - card.getCost().get("red") < 0)
		  {
			  chips.put("red", 0);
			  chips.put("wild", card.getCost().get("red") - chips.get("red"));
		  }
		  else
			  chips.put("red", chips.get("red") - (card.getCost().get("red") - numRed));
	  }
	  if(card.getCost().containsKey("green"))
	  {
		  if((chips.get("green") + numGreen) - card.getCost().get("green") < 0)
		  {
			  chips.put("green", 0);
			  chips.put("wild", card.getCost().get("green") - chips.get("green"));
		  }
		  else
			  chips.put("green", chips.get("green") - (card.getCost().get("green") - numWhite));
	  }
	  if(card.getCost().containsKey("white"))
	  {
		  if((chips.get("white") + numWhite) - card.getCost().get("white") < 0)
		  {
			  chips.put("white", 0);
			  chips.put("wild", card.getCost().get("white") - chips.get("white"));
		  }
		  else
			  chips.put("white", chips.get("white") - (card.getCost().get("white") - numWhite));
	  }
	  addCard(card.getType());
	  points += card.getValue();
  }

}
