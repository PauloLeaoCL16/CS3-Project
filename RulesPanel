import java.awt.*;
import javax.swing.*;
import java.awt.image.*;
import javax.imageio.ImageIO;
import java.io.*;
import java.awt.event.MouseListener;
import java.awt.event.MouseEvent;
import java.util.*;
import java.lang.System.*;

public class RulesPanel extends JPanel implements MouseListener
{
  private BufferedImage background;   // The full background (splendorbackground.jpg)
	private BufferedImage backButton;   // The back button

	public RulesPanel() {
	    try {
	        // Load the background and back button images
	        background = ImageIO.read(RulesPanel.class.getResource("/splendorImages/splendorbackground.jpg"));
	        backButton = ImageIO.read(RulesPanel.class.getResource("/splendorImages/backButton.JPG"));
	    } catch (IOException e) {
	        e.printStackTrace();
	    }
	    addMouseListener(this);
	}

	@Override
	protected void paintComponent(Graphics g) {
	    super.paintComponent(g);

	    // Draw the background image (splendorbackground.jpg)
	    g.drawImage(background, 0, 0, getWidth(), getHeight(), null);

	    // Set up font and color for rules text
	    g.setColor(Color.WHITE);
	    g.setFont(new Font("Arial", Font.BOLD, 30));

	    // Draw the Skyjo rules
	    g.drawString("Skyjo Rules:", 50, 100);
	    g.drawString("1. The objective is to have the fewest points at the end of the game.", 50, 150);
	    g.drawString("2. Players take turns drawing from the deck or discard pile.", 50, 200);
	    g.drawString("3. The game ends when a player reveals all cards.", 50, 250);

	    // New Y position for the back button (shifted up even more)
	    int backButtonY = getHeight() - 200; // Further adjusted Y position

	    // Draw the back button at the new position
	    g.drawImage(backButton, getWidth() / 2 - backButton.getWidth() / 2, backButtonY, null);
	}

	@Override
	public void mouseClicked(MouseEvent e) {
	    int mouseX = e.getX();
	    int mouseY = e.getY();

	    // Adjusted clickable area for the back button based on the new Y position
	    int backButtonY = getHeight() - 200; // Same as in paintComponent

	    // Check if the back button is clicked
	    if (mouseX >= getWidth() / 2 - backButton.getWidth() / 2 &&
	        mouseX <= getWidth() / 2 + backButton.getWidth() / 2 &&
	        mouseY >= backButtonY && mouseY <= backButtonY + backButton.getHeight()) {
	        // Back button clicked, go back to MainMenuPanel
	        JFrame topFrame = (JFrame) SwingUtilities.getWindowAncestor(this);
	        topFrame.getContentPane().removeAll();
	        topFrame.add(new MainMenuPanel(false)); // Return to the MainMenuPanel
	        topFrame.revalidate();
	        topFrame.repaint();
	    }
	}

	// Empty implementations for other MouseListener methods
	@Override public void mousePressed(MouseEvent e) {}
	@Override public void mouseReleased(MouseEvent e) {}
	@Override public void mouseEntered(MouseEvent e) {}
	@Override public void mouseExited(MouseEvent e) {}


}
