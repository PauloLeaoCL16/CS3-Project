import java.awt.*;
import javax.swing.*;
import java.awt.image.*;
import javax.imageio.ImageIO;
import java.io.*;
import java.awt.event.MouseListener;
import java.awt.event.MouseEvent;
import java.util.*;
import java.lang.System.*;

public class RulesPanel extends JPanel implements MouseListener
{
  private BufferedImage background;   // The full background (splendorbackground.jpg)
	private BufferedImage backButton;   // The back button

	public RulesPanel() {
	    try {
	        // Load the background and back button images
	        background = ImageIO.read(RulesPanel.class.getResource("/splendorImages/Splendor Rules.png"));
	        backButton = ImageIO.read(RulesPanel.class.getResource("/splendorImages/backButton.png"));
	    } catch (IOException e) {
	        e.printStackTrace();
	    }
	    addMouseListener(this);
	}

	@Override
	protected void paintComponent(Graphics g) {
	    super.paintComponent(g);

	    // Draw the background image (splendorbackground.jpg)
	    g.drawImage(background, 0, 0, getWidth(), getHeight(), null);

	    // Draw the back button at the new position
	    g.drawImage(backButton, 1575, 7 , 300, 150, null);
	}

	@Override
	public void mouseClicked(MouseEvent e) {
	    int mouseX = e.getX();
	    int mouseY = e.getY();

	    // Adjusted clickable area for the back button based on the new Y position
	    int backButtonY = getHeight() - 200; // Same as in paintComponent

	    // Check if the back button is clicked
	    if (mouseX >= 1575 && mouseX <= 1875 && mouseY >= 7 && mouseY <= 157) {
	        // Back button clicked, go back to MainMenuPanel
	        JFrame topFrame = (JFrame) SwingUtilities.getWindowAncestor(this);
	        topFrame.getContentPane().removeAll();
	        topFrame.add(new MainMenuPanel(false)); // Return to the MainMenuPanel
	        topFrame.revalidate();
	        topFrame.repaint();
	    }
	}

	// Empty implementations for other MouseListener methods
	@Override public void mousePressed(MouseEvent e) {}
	@Override public void mouseReleased(MouseEvent e) {}
	@Override public void mouseEntered(MouseEvent e) {}
	@Override public void mouseExited(MouseEvent e) {}


}
